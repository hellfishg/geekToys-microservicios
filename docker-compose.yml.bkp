version: '3.8'
services:

  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: pedidos_db
    ports:
      - "5432:5432"
    networks:
      - microservicios-net

  mongo:
    image: mongo:latest
    container_name: mongo_db
    ports:
      - "27017:27017"
    networks:
      - microservicios-net

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - microservicios-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka_broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - microservicios-net

  pedido-service:
    build: ./pedido-service  # Toma el Dockerfile dentro de /pedido-service
    container_name: pedido_service
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - microservicios-net

  pago-service:
    build: ./pago-service
    container_name: pago_service
    ports:
      - "8082:8080"
    depends_on:
      - kafka
    networks:
      - microservicios-net

  inventario-service:
    build: ./inventario-service
    container_name: inventario_service
    ports:
      - "8083:8080"
    depends_on:
      - mongo
      - kafka
    networks:
      - microservicios-net

  notificacion-service:
    build: ./notificacion-service
    container_name: notificacion_service
    ports:
      - "8084:8080"
    depends_on:
      - kafka
    networks:
      - microservicios-net

networks:
  microservicios-net:
    driver: bridge

